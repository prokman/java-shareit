          CREATE TABLE IF NOT EXISTS USERS (
          ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
          NAME varchar NOT NULL,
          EMAIL varchar NOT NULL,
          CONSTRAINT users_pk PRIMARY KEY (ID),
          CONSTRAINT email_uq UNIQUE (EMAIL)
          );

          CREATE TABLE IF NOT EXISTS ITEMS (
          ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
          NAME varchar NOT NULL,
          DESCRIPTION varchar NOT NULL,
          AVAILABLE BOOLEAN NOT NULL,
          OWNER_ID integer NOT NULL,
          CONSTRAINT items_pk PRIMARY KEY (ID),
          CONSTRAINT items_owner_fk FOREIGN KEY (OWNER_ID) REFERENCES USERS(ID) ON DELETE CASCADE
          );
          --Индексы для таблицы items
          CREATE INDEX IF NOT EXISTS idx_items_owner_id ON ITEMS (owner_id);

          CREATE TABLE IF NOT EXISTS BOOKINGS (
          	id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
          	start_date TIMESTAMP NOT NULL,
          	end_date TIMESTAMP NOT NULL,
          	item_id INTEGER NOT NULL,
          	booker_id INTEGER NOT NULL,
          	status VARCHAR NOT NULL,
          	PRIMARY KEY(id),
          	CONSTRAINT fk_BOOKINGS_booker_id_USERS FOREIGN KEY(booker_id) REFERENCES USERS(ID) ON DELETE CASCADE,
          	CONSTRAINT fk_BOOKINGS_item_id_ITEMS FOREIGN KEY(item_id) REFERENCES ITEMS(ID) ON DELETE CASCADE
          );
          --Индексы для таблицы items
          CREATE INDEX IF NOT EXISTS idx_bookings_booker_id ON BOOKINGS (booker_id);
          CREATE INDEX IF NOT EXISTS idx_bookings_booker_id_start_date ON BOOKINGS (start_date, start_date desc);
          CREATE INDEX IF NOT EXISTS idx_bookings_booker_id_end_date ON BOOKINGS (end_date, start_date desc);

          CREATE TABLE IF NOT EXISTS COMMENTS (
          	id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
          	text VARCHAR NOT NULL,
          	item_id INTEGER NOT NULL,
          	author_id INTEGER NOT NULL,
          	created TIMESTAMP NOT NULL,
          	PRIMARY KEY(id),
          	CONSTRAINT fk_COMMENTS_item_id_ITEMS FOREIGN KEY(item_id) REFERENCES ITEMS(ID) ON DELETE CASCADE,
          	CONSTRAINT fk_COMMENTS_author_id_USERS FOREIGN KEY(author_id) REFERENCES USERS(ID)
          );



